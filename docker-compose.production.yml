version: '3'

volumes:
  pg_data_production:
  static_volume:
  media_volume:

services:
  db:
    image: postgres:13
    env_file: .env.example
    volumes:
      - pg_data_production:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped
  backend:
    image: pro100maks1996/kittygram_backend 
    env_file: .env.example
    volumes:
      - static_volume:/backend_static
      - media_volume:/app/media
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/admin/"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  frontend:
    image: pro100maks1996/kittygram_frontend  
    env_file: .env.example
    command: cp -r /app/build/. /frontend_static/
    volumes:
      - static_volume:/frontend_static
    depends_on:
      - backend
  
  gateway:
    image: pro100maks1996/kittygram_gateway 
    env_file: .env.example
    volumes:
      - static_volume:/staticfiles/
      - media_volume:/app/media
    ports:
      - 9000:80
    depends_on: 
      backend:
        condition: service_healthy
      frontend:
        condition: service_started
    restart: unless-stopped
